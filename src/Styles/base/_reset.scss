@custom-selector :--bases html, body, div, span, applet, object, iframe,
h1, h2, h3, h4, h5, h6, p, blockquote, pre,
a, abbr, acronym, address, big, cite, code,
del, dfn, em, img, ins, kbd, q, s, samp,
small, strike, strong, sub, sup, tt, var,
b, u, i, center,
dl, dt, dd, ol, ul, li,
fieldset, form, label, legend,
table, caption, tbody, tfoot, thead, tr, th, td,
article, aside, canvas, details, embed, 
figure, figcaption, footer, header, hgroup, 
menu, nav, output, ruby, section, summary,
time, mark, audio, video;

/* Box sizing rules */
:where(*, *::before, *::after) {
	box-sizing: border-box;
}

/* Remove default margin */
:where(:--bases) {
	margin: 0;
	padding: 0;
	border: 0;
	font: inherit;
	line-height: calc(2px + 2ex + 2px);
}

/* Set core body defaults */
:where(html) {
	height: 100%;

	scroll-behavior: smooth;
}
:where(body) {
	height: Max(100vh, 100%);
	width: 100%;
	text-rendering: optimizeSpeed;
}

:where(ol, ul) {
	list-style: none;
}

:where(blockquote, q) {
	quotes: none;
	&::before,
	&::after {
		content: "";
	}
}

:where(table) {
	border-collapse: collapse;
	border-spacing: 0;
}

/* A elements that don't have a class get default styles */
a:not([class]) {
	text-decoration-skip-ink: auto;
}

/* Make images easier to work with */
:where(img, picture) {
	display: block;
	max-width: 100%;
}

//& Personal
// :where(:focus-visible)
:focus-visible {
	box-shadow://
		var(
		--fv-shadow-inset,
		var(--fv-shadow-x, 0px) //
		var(--fv-shadow-y, 0px) //
		var(--fv-shadow-blur, 8px) //
		var(--fv-shadow-spreed, 2px) //
		var(--fv-shadow-color, currentColor)
	);

	// filter: drop-shadow(0px 0px 6px currentColor);
	border-radius: var(--fv-rounded, var(--rounded-sm));
}

:where(:focus, :focus-visible) {
	outline: 0;
}

::-moz-focus-inner {
	border: 0;
}

:where(::placeholder) {
	color: inherit;
	opacity: 0.5;
}

:where(button, input, textarea, select) {
	font: inherit;
	color: inherit;
}

:where(button) {
	background-color: transparent;
	border: 0;
	user-select: none;
}
:where(a) {
	color: inherit;
	text-decoration: none;
}

:where(a, button) {
	cursor: pointer;
}

::selection {
	background-color: var(--clr-accent-200);
	color: var(--clr-surface-200);
}

input:-webkit-autofill,
input:-webkit-autofill:hover,
input:-webkit-autofill:focus,
textarea:-webkit-autofill,
textarea:-webkit-autofill:hover,
textarea:-webkit-autofill:focus,
select:-webkit-autofill,
select:-webkit-autofill:hover,
select:-webkit-autofill:focus {
	transition-property: color, background-color;
	transition-delay: 10000000s;
	transition-duration: 10000000s;
}

/* Remove all animations, transitions and smooth scroll for people that prefer not to see them */
@media (--motionNotOK) {
	html:focus-within {
		scroll-behavior: auto;
	}

	*,
	*::before,
	*::after {
		animation-duration: 0.01ms !important;
		animation-iteration-count: 1 !important;
		transition-duration: 0.01ms !important;
		scroll-behavior: auto !important;
	}
}
